{
  "stats": {
    "suites": 3,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2022-11-25T10:02:14.447Z",
    "end": "2022-11-25T10:02:18.687Z",
    "duration": 4240,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4601b5cd-7cda-4293-a43b-51beb3aefda7",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b4f364c2-2af1-4fa0-a66f-3a0c556d8fe8",
          "title": "User Registration",
          "fullFile": "D:\\Kuliah\\Sanbercode\\Tugas-Pekanan-4-API-Automation\\API\\script\\main.js",
          "file": "\\API\\script\\main.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Registration User Success",
              "fullTitle": "User Registration Registration User Success",
              "timedOut": false,
              "duration": 1389,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/authaccount/registration\")\n    .send({\n        \"name\" : TEST_DATA.name,\n        \"email\" : randomNum+TEST_DATA.email,\n        \"password\" : TEST_DATA.password\n    });\nexpect(response.status).to.eql(200);\nexpect(response.body.message).to.eql(\"success\");\nexpect(response.body.data.Name).to.eql(TEST_DATA.name);\nexpect(response.body.data.Email).to.eql(randomNum+TEST_DATA.email);",
              "err": {},
              "uuid": "482ff9bc-4a77-457d-8819-90f8d7f39a28",
              "parentUUID": "b4f364c2-2af1-4fa0-a66f-3a0c556d8fe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration User Failed - With Out Name",
              "fullTitle": "User Registration Registration User Failed - With Out Name",
              "timedOut": false,
              "duration": 238,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/authaccount/registration\")\n    .send({\n        \"name\" : \"\",\n        \"email\" : randomNum+TEST_DATA.email,\n        \"password\" : TEST_DATA.password\n    });\nexpect(response.status).to.eql(400);\nexpect(response.body.Message).to.eql(\"The request is invalid.\");",
              "err": {},
              "uuid": "1ec5bf64-307a-4799-a61c-62313fbc20ff",
              "parentUUID": "b4f364c2-2af1-4fa0-a66f-3a0c556d8fe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration User Failed - With Out Email",
              "fullTitle": "User Registration Registration User Failed - With Out Email",
              "timedOut": false,
              "duration": 231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/authaccount/registration\")\n    .send({\n        \"name\" : TEST_DATA.name,\n        \"email\" : \"\",\n        \"password\" : TEST_DATA.password\n    });\nexpect(response.status).to.eql(400);\nexpect(response.body.Message).to.eql(\"The request is invalid.\");",
              "err": {},
              "uuid": "44c46268-8c39-4ff9-a25d-784647780fc4",
              "parentUUID": "b4f364c2-2af1-4fa0-a66f-3a0c556d8fe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration User Failed - With Out Password",
              "fullTitle": "User Registration Registration User Failed - With Out Password",
              "timedOut": false,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/authaccount/registration\")\n    .send({\n        \"name\" : TEST_DATA.name,\n        \"email\" : randomNum+TEST_DATA.email,\n        \"password\" : \"\"\n    });\nexpect(response.status).to.eql(400);\nexpect(response.body.Message).to.eql(\"The request is invalid.\");",
              "err": {},
              "uuid": "b7889e11-252e-4b51-b6ed-af194aff621f",
              "parentUUID": "b4f364c2-2af1-4fa0-a66f-3a0c556d8fe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registration User Failed - Email Already Registered",
              "fullTitle": "User Registration Registration User Failed - Email Already Registered",
              "timedOut": false,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/authaccount/registration\")\n    .send({\n        \"name\" : TEST_DATA.name,\n        \"email\" : randomNum+TEST_DATA.email,\n        \"password\" : TEST_DATA.password\n    });\nexpect(response.status).to.eql(200);\nexpect(response.body.message).to.eql(\"The email address you have entered is already registered\");",
              "err": {},
              "uuid": "f73ca27d-e1dc-41b3-bcc0-67cde3b37b92",
              "parentUUID": "b4f364c2-2af1-4fa0-a66f-3a0c556d8fe8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "482ff9bc-4a77-457d-8819-90f8d7f39a28",
            "1ec5bf64-307a-4799-a61c-62313fbc20ff",
            "44c46268-8c39-4ff9-a25d-784647780fc4",
            "b7889e11-252e-4b51-b6ed-af194aff621f",
            "f73ca27d-e1dc-41b3-bcc0-67cde3b37b92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2295,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3f8db200-90c7-41ea-9a14-0fa3a22ea7f7",
          "title": "User Login",
          "fullFile": "D:\\Kuliah\\Sanbercode\\Tugas-Pekanan-4-API-Automation\\API\\script\\main.js",
          "file": "\\API\\script\\main.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Login Success",
              "fullTitle": "User Login Login Success",
              "timedOut": false,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/authaccount/login\")\n    .send({\n        \"email\" : randomNum+TEST_DATA.email,\n        \"password\" : TEST_DATA.password\n    });\n\ntoken = response.body.data.Token;\nexpect(response.status).to.eql(200);\nexpect(response.body.message).to.eql(\"success\");\nexpect(response.body.data.Name).to.eql(TEST_DATA.name);\nexpect(response.body.data.Email).to.eql(randomNum+TEST_DATA.email);",
              "err": {},
              "uuid": "ad8cf8e8-9014-4e30-bfa5-1a9c5a8f0d29",
              "parentUUID": "3f8db200-90c7-41ea-9a14-0fa3a22ea7f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login Failed - Unregistered Email",
              "fullTitle": "User Login Login Failed - Unregistered Email",
              "timedOut": false,
              "duration": 220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/authaccount/login\")\n    .send({\n        \"email\" : \"farauNotRegistered@givmail.com\",\n        \"password\" : TEST_DATA.password\n    });\nexpect(response.status).to.eql(200);\nexpect(response.body.message).to.eql(\"invalid username or password\");",
              "err": {},
              "uuid": "385305fb-2aa4-48c7-9728-6bd0cf5b2e04",
              "parentUUID": "3f8db200-90c7-41ea-9a14-0fa3a22ea7f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login Failed - Invalid Password",
              "fullTitle": "User Login Login Failed - Invalid Password",
              "timedOut": false,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/authaccount/login\")\n    .send({\n        \"email\" : randomNum+TEST_DATA.email,\n        \"password\" : randomNum+TEST_DATA.password\n    });\nexpect(response.status).to.eql(200);\nexpect(response.body.message).to.eql(\"invalid username or password\");",
              "err": {},
              "uuid": "fff429a3-2dd2-49f6-8078-734cd3330289",
              "parentUUID": "3f8db200-90c7-41ea-9a14-0fa3a22ea7f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login Failed - Empty Email",
              "fullTitle": "User Login Login Failed - Empty Email",
              "timedOut": false,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/authaccount/login\")\n    .send({\n        \"email\" : \"\",\n        \"password\" : randomNum+TEST_DATA.password\n    });\nexpect(response.status).to.eql(400);\nexpect(response.body.Message).to.eql(\"The request is invalid.\");",
              "err": {},
              "uuid": "3eac0d7a-1eeb-47a5-ad6d-022ba32879be",
              "parentUUID": "3f8db200-90c7-41ea-9a14-0fa3a22ea7f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login Failed - Empty Password",
              "fullTitle": "User Login Login Failed - Empty Password",
              "timedOut": false,
              "duration": 232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/authaccount/login\")\n    .send({\n        \"email\" : randomNum+TEST_DATA.email,\n        \"password\" : \"\"\n    });\nexpect(response.status).to.eql(400);\nexpect(response.body.Message).to.eql(\"The request is invalid.\");",
              "err": {},
              "uuid": "f7401480-cacb-46ec-885d-4ee5d15076db",
              "parentUUID": "3f8db200-90c7-41ea-9a14-0fa3a22ea7f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad8cf8e8-9014-4e30-bfa5-1a9c5a8f0d29",
            "385305fb-2aa4-48c7-9728-6bd0cf5b2e04",
            "fff429a3-2dd2-49f6-8078-734cd3330289",
            "3eac0d7a-1eeb-47a5-ad6d-022ba32879be",
            "f7401480-cacb-46ec-885d-4ee5d15076db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1152,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "de228210-bc53-4bc9-8f83-68d2890ca335",
          "title": "Create User",
          "fullFile": "D:\\Kuliah\\Sanbercode\\Tugas-Pekanan-4-API-Automation\\API\\script\\main.js",
          "file": "\\API\\script\\main.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create User Success",
              "fullTitle": "Create User Create User Success",
              "timedOut": false,
              "duration": 244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/users\")\n    .set({ Authorization: \"Bearer \"+token})\n    .send({\n        \"name\": TEST_DATA.user_name,\n        \"email\": randomNum+TEST_DATA.user_email,\n        \"location\": TEST_DATA.location\n    });\nexpect(response.status).to.eql(201);\nexpect(response.body.name).to.eql(TEST_DATA.user_name);\nexpect(response.body.email).to.eql(randomNum+TEST_DATA.user_email);",
              "err": {},
              "uuid": "522c9b4b-0e8c-429c-ab25-a2830f0356eb",
              "parentUUID": "de228210-bc53-4bc9-8f83-68d2890ca335",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create User Failed - Registered Email",
              "fullTitle": "Create User Create User Failed - Registered Email",
              "timedOut": false,
              "duration": 259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/users\")\n    .set({ Authorization: \"Bearer \"+token})\n    .send({\n        \"name\": TEST_DATA.user_name,\n        \"email\": randomNum+TEST_DATA.user_email,\n        \"location\": TEST_DATA.location\n    });\nexpect(response.status).to.eql(400);\nexpect(response.body.Message).to.eql(\"Pleae try with different email address!\");",
              "err": {},
              "uuid": "248400a3-a444-4a9d-8e6b-7305e0f3c6dc",
              "parentUUID": "de228210-bc53-4bc9-8f83-68d2890ca335",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create User Failed - Invalid Token",
              "fullTitle": "Create User Create User Failed - Invalid Token",
              "timedOut": false,
              "duration": 270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n    .post(\"/api/users\")\n    .set({ Authorization: \"Bearer 944743cd-510f-4e73-9b30-53c069698891\"})\n    .send({\n        \"name\": TEST_DATA.user_name,\n        \"email\": randomNum+TEST_DATA.user_email,\n        \"location\": TEST_DATA.location\n    });\nexpect(response.status).to.eql(401);",
              "err": {},
              "uuid": "08958691-1cbe-4390-b100-7aa85706aa10",
              "parentUUID": "de228210-bc53-4bc9-8f83-68d2890ca335",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "522c9b4b-0e8c-429c-ab25-a2830f0356eb",
            "248400a3-a444-4a9d-8e6b-7305e0f3c6dc",
            "08958691-1cbe-4390-b100-7aa85706aa10"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 773,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}